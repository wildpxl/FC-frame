/**
 * Farcaster API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { CustodyAddressResponse } from '../models';
import type { RecentUsersResponse } from '../models';
import type { UserCastLikeResponse } from '../models';
import type { UserResponse } from '../models';
/**
 * UserApi - axios parameter creator
 * @export
 */
export declare const UserApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Now deprecated, use [v2/user/bulk](https://docs.neynar.com/reference/user-bulk), find custody address in user obj. Returns the custody address for a given FID
     * @summary DEPRECATED - Fetch the custody address for a given FID
     * @param {number} fid FID of a user
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    custodyAddress: (fid: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch a list of casts from the protocol in reverse chronological order based on timestamp
     * @summary Fetch Recent Users
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {number} [limit] Number of results to fetch (default 100, max 1000)
     * @param {string} [cursor] Pagination cursor.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    recentUsers: (viewerFid?: number, limit?: number, cursor?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Now deprecated, use [v2/user/bulk](https://docs.neynar.com/reference/user-bulk). Returns metadata about a specific user
     * @summary DEPRECATED - Fetch User Information by FID
     * @param {number} fid FID of a user
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    user: (fid: number, viewerFid?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Now deprecated, use [v2/user/by_username](https://docs.neynar.com/reference/user-by-username-v2) instead. Returns metadata about a specific user
     * @summary DEPRECATED - Fetch User Information by username
     * @param {string} username Username of the user
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    userByUsernameV1: (username: string, viewerFid?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Now deprecated. use [/v2/reactions/user](https://docs.neynar.com/reference/reactions-user). Fetch all the liked cast of a User
     * @summary DEPRECATED -- Fetch User Cast Likes
     * @param {number} fid FID of the user
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {number} [limit] Number of results to fetch (default 25, max 150)
     * @param {string} [cursor] Pagination cursor
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    userCastLikes: (fid: number, viewerFid?: number, limit?: number, cursor?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * UserApi - functional programming interface
 * @export
 */
export declare const UserApiFp: (configuration?: Configuration) => {
    /**
     * Now deprecated, use [v2/user/bulk](https://docs.neynar.com/reference/user-bulk), find custody address in user obj. Returns the custody address for a given FID
     * @summary DEPRECATED - Fetch the custody address for a given FID
     * @param {number} fid FID of a user
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    custodyAddress(fid: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CustodyAddressResponse>>;
    /**
     * Fetch a list of casts from the protocol in reverse chronological order based on timestamp
     * @summary Fetch Recent Users
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {number} [limit] Number of results to fetch (default 100, max 1000)
     * @param {string} [cursor] Pagination cursor.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    recentUsers(viewerFid?: number, limit?: number, cursor?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RecentUsersResponse>>;
    /**
     * Now deprecated, use [v2/user/bulk](https://docs.neynar.com/reference/user-bulk). Returns metadata about a specific user
     * @summary DEPRECATED - Fetch User Information by FID
     * @param {number} fid FID of a user
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    user(fid: number, viewerFid?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserResponse>>;
    /**
     * Now deprecated, use [v2/user/by_username](https://docs.neynar.com/reference/user-by-username-v2) instead. Returns metadata about a specific user
     * @summary DEPRECATED - Fetch User Information by username
     * @param {string} username Username of the user
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    userByUsernameV1(username: string, viewerFid?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserResponse>>;
    /**
     * Now deprecated. use [/v2/reactions/user](https://docs.neynar.com/reference/reactions-user). Fetch all the liked cast of a User
     * @summary DEPRECATED -- Fetch User Cast Likes
     * @param {number} fid FID of the user
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {number} [limit] Number of results to fetch (default 25, max 150)
     * @param {string} [cursor] Pagination cursor
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    userCastLikes(fid: number, viewerFid?: number, limit?: number, cursor?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserCastLikeResponse>>;
};
/**
 * UserApi - factory interface
 * @export
 */
export declare const UserApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Now deprecated, use [v2/user/bulk](https://docs.neynar.com/reference/user-bulk), find custody address in user obj. Returns the custody address for a given FID
     * @summary DEPRECATED - Fetch the custody address for a given FID
     * @param {number} fid FID of a user
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    custodyAddress(fid: number, options?: RawAxiosRequestConfig): AxiosPromise<CustodyAddressResponse>;
    /**
     * Fetch a list of casts from the protocol in reverse chronological order based on timestamp
     * @summary Fetch Recent Users
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {number} [limit] Number of results to fetch (default 100, max 1000)
     * @param {string} [cursor] Pagination cursor.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    recentUsers(viewerFid?: number, limit?: number, cursor?: string, options?: RawAxiosRequestConfig): AxiosPromise<RecentUsersResponse>;
    /**
     * Now deprecated, use [v2/user/bulk](https://docs.neynar.com/reference/user-bulk). Returns metadata about a specific user
     * @summary DEPRECATED - Fetch User Information by FID
     * @param {number} fid FID of a user
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    user(fid: number, viewerFid?: number, options?: RawAxiosRequestConfig): AxiosPromise<UserResponse>;
    /**
     * Now deprecated, use [v2/user/by_username](https://docs.neynar.com/reference/user-by-username-v2) instead. Returns metadata about a specific user
     * @summary DEPRECATED - Fetch User Information by username
     * @param {string} username Username of the user
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    userByUsernameV1(username: string, viewerFid?: number, options?: RawAxiosRequestConfig): AxiosPromise<UserResponse>;
    /**
     * Now deprecated. use [/v2/reactions/user](https://docs.neynar.com/reference/reactions-user). Fetch all the liked cast of a User
     * @summary DEPRECATED -- Fetch User Cast Likes
     * @param {number} fid FID of the user
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {number} [limit] Number of results to fetch (default 25, max 150)
     * @param {string} [cursor] Pagination cursor
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    userCastLikes(fid: number, viewerFid?: number, limit?: number, cursor?: string, options?: RawAxiosRequestConfig): AxiosPromise<UserCastLikeResponse>;
};
/**
 * UserApi - object-oriented interface
 * @export
 * @class UserApi
 * @extends {BaseAPI}
 */
export declare class UserApi extends BaseAPI {
    /**
     * Now deprecated, use [v2/user/bulk](https://docs.neynar.com/reference/user-bulk), find custody address in user obj. Returns the custody address for a given FID
     * @summary DEPRECATED - Fetch the custody address for a given FID
     * @param {number} fid FID of a user
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     * @memberof UserApi
     */
    custodyAddress(fid: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CustodyAddressResponse, any>>;
    /**
     * Fetch a list of casts from the protocol in reverse chronological order based on timestamp
     * @summary Fetch Recent Users
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {number} [limit] Number of results to fetch (default 100, max 1000)
     * @param {string} [cursor] Pagination cursor.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserApi
     */
    recentUsers(viewerFid?: number, limit?: number, cursor?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RecentUsersResponse, any>>;
    /**
     * Now deprecated, use [v2/user/bulk](https://docs.neynar.com/reference/user-bulk). Returns metadata about a specific user
     * @summary DEPRECATED - Fetch User Information by FID
     * @param {number} fid FID of a user
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     * @memberof UserApi
     */
    user(fid: number, viewerFid?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserResponse, any>>;
    /**
     * Now deprecated, use [v2/user/by_username](https://docs.neynar.com/reference/user-by-username-v2) instead. Returns metadata about a specific user
     * @summary DEPRECATED - Fetch User Information by username
     * @param {string} username Username of the user
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     * @memberof UserApi
     */
    userByUsernameV1(username: string, viewerFid?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserResponse, any>>;
    /**
     * Now deprecated. use [/v2/reactions/user](https://docs.neynar.com/reference/reactions-user). Fetch all the liked cast of a User
     * @summary DEPRECATED -- Fetch User Cast Likes
     * @param {number} fid FID of the user
     * @param {number} [viewerFid] FID of the user viewing this information, needed for contextual information.
     * @param {number} [limit] Number of results to fetch (default 25, max 150)
     * @param {string} [cursor] Pagination cursor
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     * @memberof UserApi
     */
    userCastLikes(fid: number, viewerFid?: number, limit?: number, cursor?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserCastLikeResponse, any>>;
}
